{"version":3,"sources":["scripts/main.js"],"names":["nodesFields","document","querySelectorAll","arrayNodesFields","forEach","el","inputElement","querySelector","inputNameId","getAttribute","inputName","label","createElement","setAttribute","classList","add","textContent","insertBefore","formatNamePlaceholder","inputNamePlaceholder","words","currentWord","i","length","char","toUpperCase","toLowerCase","push","map","word","charAt","slice","join"],"mappings":";AAAA,aAMA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,WAAA,MAAA,EAAA,cAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAcC,SAASC,iBAAiB,UAExCC,EAAuBH,EAAAA,GAE7BG,EAAiBC,QAAQ,SAACC,GAClBC,IAAAA,EAAeD,EAAGE,cAAc,SAChCC,EAAcF,EAAaG,aAAa,MACxCC,EAAYJ,EAAaG,aAAa,QAEtCE,EAAQV,SAASW,cAAc,SAErCD,EAAME,aAAa,MAAOL,GAC1BG,EAAMG,UAAUC,IAAI,eACpBJ,EAAMK,YAAcN,EAEpBL,EAAGY,aAAaN,EAAOL,GA0BvBA,EAAaO,aAAa,cAxBjBK,SAAsBC,GAIxB,IAHCC,IAAAA,EAAQ,GACVC,EAAc,GAETC,EAAI,EAAGA,EAAIH,EAAqBI,OAAQD,IAAK,CAC9CE,IAAAA,EAAOL,EAAqBG,GAE9BE,EAAKC,gBAAkBD,GAAQA,IAASA,EAAKE,eAC3CL,GACFD,EAAMO,KAAKN,GAGbA,EAAcG,GAEdH,GAAeG,EAKZJ,OAFPA,EAAMO,KAAKN,GAEJD,EACJQ,IAAI,SAACC,GAASA,OAAAA,EAAKC,OAAO,GAAGL,cAAgBI,EAAKE,MAAM,KACxDC,KAAK,KAG+Bd,CAAsBR","file":"main.134f64ea.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst nodesFields = document.querySelectorAll('.field');\n\nconst arrayNodesFields = [...nodesFields];\n\narrayNodesFields.forEach((el) => {\n  const inputElement = el.querySelector('input');\n  const inputNameId = inputElement.getAttribute('id');\n  const inputName = inputElement.getAttribute('name');\n\n  const label = document.createElement('label');\n\n  label.setAttribute('for', inputNameId);\n  label.classList.add('field-label');\n  label.textContent = inputName;\n\n  el.insertBefore(label, inputElement);\n\n  function formatNamePlaceholder(inputNamePlaceholder) {\n    const words = [];\n    let currentWord = '';\n\n    for (let i = 0; i < inputNamePlaceholder.length; i++) {\n      const char = inputNamePlaceholder[i];\n\n      if (char.toUpperCase() === char && char !== char.toLowerCase()) {\n        if (currentWord) {\n          words.push(currentWord);\n        }\n\n        currentWord = char;\n      } else {\n        currentWord += char;\n      }\n    }\n    words.push(currentWord);\n\n    return words\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  }\n\n  inputElement.setAttribute('placeholder', formatNamePlaceholder(inputName));\n});\n"]}